// Removes the element without affecting its display properties
@mixin visuallyhidden {
  position: absolute;

  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);

  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
}

// Removes default styles for buttons
@mixin resetbutton {
  background: color(translucid, transparent);
  border: none;
  cursor: pointer;
}

// Generic styling for sidenav bottom buttons
@mixin bottombutton($color, $hovercolor) {
  @include resetbutton;

  display: block;
  line-height: 50px;
  color: white;
  background: $color;
  &:hover {
    background: $hovercolor;
  }
}

// Disables clicking
@mixin preventclick {
  cursor: default;
  pointer-events: none;
}

// Removes margins and paddings in elements
@mixin nopadmargin {
  margin: 0;
  padding: 0;
}

// Removes margins, paddings and list item bullets
@mixin resetlist {
  @include nopadmargin;
  > li {
    list-style-type: none;
  }
}

// Truncates text with ellipsis at the given width (lorem ipsum -> lorem ip...)
@mixin truncateAt($width) {
  width: $width;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

// Crops appending an ellipsis on large blocks of text
@mixin crop-multiline($font-size, $line-height, $lines-to-show) {
  display: block;
  display: -webkit-box;
  overflow: hidden;
  height: $font-size*$line-height*$lines-to-show;
  text-overflow: ellipsis;
  font-size: $font-size;
  line-height: $line-height;

  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
}

// Z-index helper mixin (see also associated helper)
@mixin level($level) {
  z-index: level($level);
}

// Crossbrowser box shadow
@mixin box-shadow($payload) {
  box-shadow: $payload;
}

// Allows placeholder style customisation in form inputs
@mixin placeholder {
  ::placeholder {
    @content;
  }

  ::-webkit-input-placeholder {
    @content;
  }

  :-moz-placeholder {
     @content;
  }

  ::-moz-placeholder {
     @content;
  }

  :-ms-input-placeholder {
     @content;
  }
}

@mixin placeholderfocus {
  :focus::placeholder {
    @content;
  }
 
  :focus::-webkit-input-placeholder {
    @content;
  }

  :focus:-moz-placeholder {
     @content;
  }

  :focus::-moz-placeholder {
     @content;
  }

  :focus:-ms-input-placeholder {
     @content;
  }
}

// To be applied to any cotnainer whose (unique) child element needs to float vertically centered
@mixin vertically-centered-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-content: center;
}

// A mixin to turn a container into a perfect header/body/footer wrapper
@mixin body-footer-layout {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-content: stretch;
  height: 100%;
}

// Trigger 3D hardware acceleration in order to improve UI peformance
@mixin enable-3D-acceleration {
  transform: translateZ(0);
  transform: translate3d(0, 0, 0);
}

// Prevents flickering (on FF mostly) on lazy loaded items featuring CSS animations
@mixin prevent-animation-flicker {
  backface-visibility: hidden;
  perspective: 1000px;
}
